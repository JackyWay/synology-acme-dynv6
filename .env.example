################################################################################
# Synology DSM SSL Certificate Automation - Environment Variables
#
# Copy this file to .env and fill in your actual values
# Command: cp .env.example .env
################################################################################

# ============================================================================
# REQUIRED VARIABLES
# ============================================================================

# dynv6 API Token
# Get your token from: https://dynv6.com/keys
# This is used for DNS-01 challenge validation
DYNV6_TOKEN=exampletoken1234567890abcdef

# Your Domain Name
# The domain you want to issue certificate for (must be registered with dynv6)
# Example: abc.com
DOMAIN=example.dynv6.net

# Email Address
# Used for Let's Encrypt account registration and renewal notifications
EMAIL=example@example.com

# ============================================================================
# OPTIONAL VARIABLES - DSM Authentication
# ============================================================================

# Temporary Admin Mode (Recommended)
# Set to 1 to use temporary admin user (more secure, requires root)
# Set to 0 to use provided credentials below
# Default: 1
#
# IMPORTANT: Temp admin mode requires native acme.sh installation!
# Run: sudo ./scripts/install-acme-native.sh (one-time setup)
#
# Why native acme.sh?
# - SYNO_USE_TEMP_ADMIN=1 requires DSM system tools (synouser, synogroup, etc.)
# - These tools only exist on DSM host, not inside Docker containers
# - Native installation allows secure deployment without storing passwords
# - Docker still handles certificate issuance/renewal
# - Both share the same certificate storage (no duplication)
SYNO_USE_TEMP_ADMIN=1

# DSM Admin Credentials (only needed if SYNO_USE_TEMP_ADMIN=0)
# Leave empty if using temporary admin mode
SYNO_USERNAME=
SYNO_PASSWORD=

# ============================================================================
# OPTIONAL VARIABLES - DSM Connection
# ============================================================================

# DSM Connection Scheme
# Options: http, https
# Default: http (since we're connecting locally)
SYNO_SCHEME=http

# DSM Hostname
# Use 'localhost' or '127.0.0.1' when running on the NAS
# Default: localhost
SYNO_HOSTNAME=localhost

# DSM Port
# Default HTTP port: 5000
# Default HTTPS port: 5001
SYNO_PORT=5000

# Certificate Description in DSM
# The name that will appear in DSM Control Panel → Security → Certificate
# Default: acme.sh
SYNO_CERTIFICATE=acme.sh

# Create Certificate if Not Exists
# Set to 1 to automatically create certificate entry in DSM if it doesn't exist
# Default: 1
SYNO_CREATE=1

# ============================================================================
# OPTIONAL VARIABLES - 2FA/OTP (only if using existing admin with 2FA)
# ============================================================================

# Device Name for 2FA
# A friendly name for this device when registering with DSM 2FA
# Only needed if your DSM account has 2FA enabled
SYNO_DEVICE_NAME=

# Device ID for 2FA
# The device ID from previous authentication (saved automatically)
# Only needed if your DSM account has 2FA enabled
SYNO_DEVICE_ID=

# OTP Code for 2FA
# The 6-digit OTP code from your authenticator app
# Only needed if your DSM account has 2FA enabled and no device ID is saved
SYNO_OTP_CODE=

# ============================================================================
# OPTIONAL VARIABLES - Certificate Configuration
# ============================================================================

# ACME Server
# Options: letsencrypt, letsencrypt_test (for testing), zerossl
# Default: letsencrypt
ACME_SERVER=letsencrypt

# Additional Domains (for SAN certificate)
# Add multiple domains to the same certificate
# Format: -d domain1.example.com -d domain2.example.com
# Leave empty for single domain certificate
ADDITIONAL_DOMAINS=

# ============================================================================
# EXAMPLE CONFIGURATIONS
# ============================================================================

# Example 1: Minimal Configuration (Recommended)
# ----------------------------------------
# DYNV6_TOKEN=abcd1234efgh5678ijkl9012mnop3456
# DOMAIN=example.v6.army
# EMAIL=admin@example.com
# SYNO_USE_TEMP_ADMIN=1

# Example 2: Using Existing Admin Account
# ----------------------------------------
# DYNV6_TOKEN=abcd1234efgh5678ijkl9012mnop3456
# DOMAIN=example.v6.army
# EMAIL=admin@example.com
# SYNO_USE_TEMP_ADMIN=0
# SYNO_USERNAME=admin
# SYNO_PASSWORD=your_secure_password

# Example 3: With Custom Certificate Name
# ----------------------------------------
# DYNV6_TOKEN=abcd1234efgh5678ijkl9012mnop3456
# DOMAIN=example.v6.army
# EMAIL=admin@example.com
# SYNO_USE_TEMP_ADMIN=1
# SYNO_CERTIFICATE=Let's Encrypt - example.v6.army

# Example 4: Multiple Domains (SAN Certificate)
# ----------------------------------------
# DYNV6_TOKEN=abcd1234efgh5678ijkl9012mnop3456
# DOMAIN=example.v6.army
# EMAIL=admin@example.com
# ADDITIONAL_DOMAINS=-d www.example.v6.army -d files.example.v6.army
# SYNO_USE_TEMP_ADMIN=1

# Example 5: Testing with Staging Server
# ----------------------------------------
# DYNV6_TOKEN=abcd1234efgh5678ijkl9012mnop3456
# DOMAIN=example.v6.army
# EMAIL=admin@example.com
# ACME_SERVER=letsencrypt_test
# SYNO_USE_TEMP_ADMIN=1

# ============================================================================
# NOTES
# ============================================================================

# 1. Security: After creating .env, set secure permissions:
#    chmod 600 .env
#    chown root:root .env

# 2. Hybrid Architecture (Docker + Native):
#    - Docker handles certificate issuance and renewal (DNS validation)
#    - Native acme.sh handles deployment to DSM (requires DSM system tools)
#    - Both share the same certificate directory (acme-data/)
#    - Install native acme.sh: sudo ./scripts/install-acme-native.sh

# 3. Temporary Admin Mode (Recommended):
#    - More secure (no stored credentials)
#    - Requires native acme.sh installation on DSM
#    - Requires running deployment scripts as root (sudo)
#    - Only works when connecting to localhost
#    - Creates temporary admin user during deployment

# 4. Credential Mode:
#    - Requires storing admin password in .env
#    - Can connect to remote DSM instances
#    - Make sure .env has restricted permissions (chmod 600)
#    - Works with Docker-only setup (no native acme.sh needed)

# 5. 2FA/OTP:
#    - If DSM has 2FA enabled, you may need to provide OTP code
#    - After first successful auth, DEVICE_ID is saved for future use
#    - Temp admin mode bypasses 2FA requirement

# 6. Testing:
#    - Use ACME_SERVER=letsencrypt_test to avoid rate limits during testing
#    - Switch to letsencrypt for production certificates

# 7. Multiple Domains:
#    - All domains must be accessible via dynv6 DNS API
#    - Each additional domain increases validation time

# 8. Workflow:
#    Step 1: Issue/Renew (Docker)  → acme-data/ (shared storage)
#    Step 2: Deploy (Native acme.sh) → Synology DSM
